# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: cpi-cicd-pipeline
on:
  workflow_dispatch:
  push:
    branches:
      - github-actions

env:
  FLASHPIPE_TMN_HOST: equaliseit.it-cpi023.cfapps.eu20-001.hana.ondemand.com
  FLASHPIPE_OAUTH_HOST: equaliseit.authentication.eu20.hana.ondemand.com
  FLASHPIPE_OAUTH_CLIENTID: ${{ secrets.DEV_CLIENT_ID }}
  FLASHPIPE_OAUTH_CLIENTSECRET: ${{ secrets.DEV_CLIENT_SECRET }}
jobs:
# Unit test
  unit_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
      - name: 'Local unit test with Maven'
        run: mvn clean test
# Update designtime
  update:
    runs-on: ubuntu-latest
    needs: unit_test
    container:
      image: engswee/flashpipe:3.0.0
    steps:
      - uses: actions/checkout@v4
      # Set environment variable for source directory of Integration Flow
      - run: |
          echo "FLASHPIPE_DIR_ARTIFACT=$GITHUB_WORKSPACE/FlashPipe Demo/Groovy XML Transformation" >> $GITHUB_ENV
      # Upload/Update design time artifact
      - name: 'Update/Upload Groovy XML Transformation to design time'
        run: flashpipe update artifact
        shell: bash
        env:
          FLASHPIPE_ARTIFACT_ID: GroovyXMLTransformation
          FLASHPIPE_ARTIFACT_NAME: "Groovy XML Transformation"
          FLASHPIPE_PACKAGE_ID: FlashPipeDemo
          FLASHPIPE_PACKAGE_NAME: "FlashPipe Demo"
      # Set environment variable for source directory of Message Mapping
      - run: |
          echo "FLASHPIPE_DIR_ARTIFACT=$GITHUB_WORKSPACE/FlashPipe Demo/Sample_Message_Mapping" >> $GITHUB_ENV
      # Upload/Update design time artifact
      - name: 'Update/Upload Sample_Message_Mapping to design time'
        run: flashpipe update artifact
        shell: bash
        env:
          FLASHPIPE_ARTIFACT_ID: Sample_Message_Mapping
          FLASHPIPE_ARTIFACT_NAME: "Sample Message Mapping"
          FLASHPIPE_PACKAGE_ID: FlashPipeDemo
          FLASHPIPE_PACKAGE_NAME: "FlashPipe Demo"
          FLASHPIPE_ARTIFACT_TYPE: MessageMapping
      # Set environment variable for source directory of Script Collection
      - run: |
          echo "FLASHPIPE_DIR_ARTIFACT=$GITHUB_WORKSPACE/FlashPipe Demo/Sample_Script_Collection" >> $GITHUB_ENV
      # Upload/Update design time artifact
      - name: 'Update/Upload Sample_Script_Collection to design time'
        run: flashpipe update artifact
        shell: bash
        env:
          FLASHPIPE_ARTIFACT_ID: Sample_Script_Collection
          FLASHPIPE_ARTIFACT_NAME: "Sample Script Collection"
          FLASHPIPE_PACKAGE_ID: FlashPipeDemo
          FLASHPIPE_PACKAGE_NAME: "FlashPipe Demo"
          FLASHPIPE_ARTIFACT_TYPE: ScriptCollection
      # Set environment variable for source directory of Value Mapping
      - run: |
          echo "FLASHPIPE_DIR_ARTIFACT=$GITHUB_WORKSPACE/FlashPipe Demo/Sample_Value_Mapping" >> $GITHUB_ENV
      # Upload/Update design time artifact
      - name: 'Update/Upload Sample_Value_Mapping to design time'
        run: flashpipe update artifact
        shell: bash
        env:
          FLASHPIPE_ARTIFACT_ID: Sample_Value_Mapping
          FLASHPIPE_ARTIFACT_NAME: "Sample Value Mapping"
          FLASHPIPE_PACKAGE_ID: FlashPipeDemo
          FLASHPIPE_PACKAGE_NAME: "FlashPipe Demo"
          FLASHPIPE_ARTIFACT_TYPE: ValueMapping
# Deploy to runtime
  deploy:
    runs-on: ubuntu-latest
    needs: update
    container:
      image: engswee/flashpipe:3.0.0
    steps:
      - uses: actions/checkout@v4
      - name: 'Deploy Groovy XML Transformation to runtime'
        run: flashpipe deploy
        shell: bash
        env:
          FLASHPIPE_ARTIFACT_IDS: GroovyXMLTransformation
      - name: 'Deploy Sample_Message_Mapping to runtime'
        run: flashpipe deploy
        shell: bash
        env:
          FLASHPIPE_ARTIFACT_IDS: Sample_Message_Mapping
          FLASHPIPE_ARTIFACT_TYPE: MessageMapping
      - name: 'Deploy Sample_Script_Collection to runtime'
        run: flashpipe deploy
        shell: bash
        env:
          FLASHPIPE_ARTIFACT_IDS: Sample_Script_Collection
          FLASHPIPE_ARTIFACT_TYPE: ScriptCollection
      - name: 'Deploy Sample_Value_Mapping to runtime'
        run: flashpipe deploy
        shell: bash
        env:
          FLASHPIPE_ARTIFACT_IDS: Sample_Value_Mapping
          FLASHPIPE_ARTIFACT_TYPE: ValueMapping
